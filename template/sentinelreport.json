{
    "$schema":  "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymenttemplate.json#",
    "contentversion":  "1.0.0.0",
    "parameters":  {
                       "location":  {
                                        "type":  "string",
                                        "defaultvalue":  "chinaeast2"
                                    },
                       "workspacename":  {
                                             "type":  "string"
                                         },
                       "workspaceresourcegroup": {
                            "type":  "string"
                       },
                       "sentinelqueryreport_id":  {
                                                      "defaultValue":  "[newGuid()]",
                                                      "type":  "string"
                                                  },
                        "AutomationAccountName": {
                           "type":  "string"
                        },
                        "detectionstarttime": {
                            "type": "string"
                        }, 
                         "detectionqueryinterval": {
                            "type": "int",
                            "defaultValue": 1                              
                        },
                        "detectionqueryfrequency": {
                            "type": "string",
                            "defaultValue": "hour"                              
                        },
                        "detectionjobschedule": {
                            "type": "string",
                            "defaultValue": "[newGuid()]",
                            "metadata": {
                                "description": "GUID for the job schedule creation - automatically created at deploy"
                            }
                        }           
                   },
    "variables": {
        "runbookName": "PollingSecurityRules",
        "workbookname": "Security Query Report",
        "workspacenresourceId":"[concat(resourceId(parameters('workspaceresourcegroup'),'Microsoft.OperationalInsights/workspaces', parameters('workspacename')))]",
        "detectionqueryschedulename":"detectionqueryschedule",
        "workbookContent": {
            "version": "Notebook/1.0",
            "items": [
                {
                "type": 1,
                "content": {
                    "json": "## Sentinel Insights Query report \n---\n\nThis page is used to show scheduled hunting query report"
                },
                "name": "text - 2"
                },
                {
                "type": 11,
                "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                    {
                        "id": "fea27623-9482-4429-86ae-fe2f6b1e6014",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Security Rule Scan Result",
                        "subTarget": "securityreport",
                        "style": "link"
                    },
                    {
                        "id": "9c96a231-6553-40e1-b876-796d3fd3e0fc",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Exploration by public IP",
                        "subTarget": "publicIPAddress",
                        "style": "link"
                    },
                    {
                        "id": "abdf094b-1c75-4c0c-a767-75d3045693f0",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Exploration by host or local IP",
                        "subTarget": "hostorIP",
                        "style": "link",
                        "linkIsContextBlade": true
                    },
                    {
                        "id": "91a6abb1-f485-4a94-a321-bdd0a32b6945",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Exploration by account name",
                        "subTarget": "accountname",
                        "style": "link"
                    }
                    ]
                },
                "name": "tabs"
                },
                {
                "type": 9,
                "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                    {
                        "id": "d1aafbb4-c6f4-41da-96ca-539b3547236a",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "label": " Time Range",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                        "durationMs": 86400000
                        },
                        "typeSettings": {
                        "selectableValues": [
                            {
                            "durationMs": 300000
                            },
                            {
                            "durationMs": 900000
                            },
                            {
                            "durationMs": 1800000
                            },
                            {
                            "durationMs": 3600000
                            },
                            {
                            "durationMs": 14400000
                            },
                            {
                            "durationMs": 43200000
                            },
                            {
                            "durationMs": 86400000
                            },
                            {
                            "durationMs": 172800000
                            },
                            {
                            "durationMs": 259200000
                            },
                            {
                            "durationMs": 604800000
                            },
                            {
                            "durationMs": 1209600000
                            },
                            {
                            "durationMs": 2419200000
                            },
                            {
                            "durationMs": 2592000000
                            },
                            {
                            "durationMs": 5184000000
                            },
                            {
                            "durationMs": 7776000000
                            }
                        ]
                        },
                        "timeContext": {
                        "durationMs": 86400000
                        }
                    }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "parameters - 4"
                },
                {
                "type": 12,
                "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Security Rule Scan Result",
                    "items": [
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "sentinelscanreport_CL \r\n | where type_s =~ \"Detection\"\r\n | where count_d != 0\r\n | summarize count() by bin(TimeGenerated, 4h), rulename_s\r\n | render columnchart\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Detection Rules triggered per 4 hours",
                        "timeContext": {
                            "durationMs": 86400000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportFieldName": "Query",
                        "exportParameterName": "Query",
                        "showExportToExcel": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "gridSettings": {
                            "formatters": [
                            {
                                "columnMatch": "Query",
                                "formatter": 5
                            }
                            ]
                        },
                        "graphSettings": {
                            "type": 0
                        }
                        },
                        "name": "Detection Rule by Severity"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "sentinelscanreport_CL \r\n | where type_s =~ \"Detection\"\r\n | where count_d != 0\r\n | summarize ['Last Trigger Time'] = arg_max(TimeGenerated, *), ['First Trigger Time'] = arg_min(TimeGenerated, *), ['Triggered Count'] = count() by rulename_s,type_s, query_s, description_s, severity_s, Category\r\n | order by count_d desc\r\n | extend ['Rule Name'] = rulename_s, Query =  query_s, Description = description_s, Severity = ['severity_s']\r\n | extend severitylevel = iff(Severity=~'High',1,iff(Severity=~'Medium',2,3))\r\n | extend ['Rule Category'] = Category\r\n | order by severitylevel asc, ['Triggered Count'] desc\r\n | project Severity, ['Rule Name'], ['Last Trigger Time'], ['First Trigger Time'],['Rule Category'],['Triggered Count'], Query, Description, severitylevel",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Security Rule triggered",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportFieldName": "Query",
                        "exportParameterName": "Query",
                        "showExportToExcel": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "gridSettings": {
                            "formatters": [
                            {
                                "columnMatch": "Severity",
                                "formatter": 5
                            },
                            {
                                "columnMatch": "Query",
                                "formatter": 5
                            },
                            {
                                "columnMatch": "severitylevel",
                                "formatter": 5
                            }
                            ],
                            "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": [
                                "Severity"
                            ],
                            "expandTopLevel": true,
                            "finalBy": "Rule Name"
                            }
                        }
                        },
                        "name": "query - get rule details"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "{Query}",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Selected rule query details",
                        "showExportToExcel": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 4"
                    },
                    {
                        "type": 9,
                        "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                            {
                            "id": "edba0ca3-655c-4382-996c-7f8690eb5ce9",
                            "version": "KqlParameterItem/1.0",
                            "name": "category",
                            "type": 2,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "query": "sentinelscanreport_CL\r\n| where type_s =~ 'Hunting'\r\n| distinct Category",
                            "value": [
                                "IdentityActivity"
                            ],
                            "typeSettings": {
                                "additionalResourceOptions": []
                            },
                            "timeContext": {
                                "durationMs": 0
                            },
                            "timeContextFromParameter": "TimeRange",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                        ],
                        "style": "pills",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 7"
                    },
                    {
                        "type": 12,
                        "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                            {
                            "type": 3,
                            "content": {
                                "version": "KqlItem/1.0",
                                "query": "let Categoriesselected = datatable(Category:string) \r\n      [ \r\n        {category}\r\n      ];\r\nCategoriesselected \r\n| join kind=inner\r\n( sentinelscanreport_CL \r\n| where type_s =~ \"Hunting\"\r\n| summarize arg_max(TimeGenerated, *) by rulename_s, type_s, query_s, description_s, Category\r\n//| where count_d > 0\r\n| extend ['Rule Name'] = rulename_s, Query =  query_s, ['Last Scan Time']=TimeGenerated, Description = description_s\r\n| extend ['Rule Category'] = Category\r\n| project ['Last Scan Time'], ['Rule Name'], ['Rule Category'], Query, Description\r\n) on $left.Category == $right.['Rule Category']\r\n\r\n\r\n",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "hunting rules which to look for more security logs details",
                                "timeContext": {
                                "durationMs": 86400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "exportedParameters": [
                                {
                                    "fieldName": "Query",
                                    "parameterName": "Query",
                                    "parameterType": 1
                                },
                                {
                                    "fieldName": "Name",
                                    "parameterName": "Name",
                                    "parameterType": 1
                                }
                                ],
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "gridSettings": {
                                "formatters": [
                                    {
                                    "columnMatch": "Query",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "linkTarget": "OpenBlade",
                                        "linkIsContextBlade": false,
                                        "workbookContext": {
                                        "componentIdSource": "workbook",
                                        "resourceIdsSource": "cell",
                                        "templateIdSource": "cell",
                                        "typeSource": "workbook",
                                        "gallerySource": "workbook",
                                        "locationSource": "default"
                                        },
                                        "alertRuleContext": {
                                        "alertType": "Log"
                                        },
                                        "bladeOpenContext": {
                                        "bladeParameters": []
                                        }
                                    }
                                    }
                                ]
                                }
                            },
                            "name": "hunting rules which to look for more security logs details"
                            },
                            {
                            "type": 3,
                            "content": {
                                "version": "KqlItem/1.0",
                                "query": "{Query}",
                                "size": 0,
                                "showAnalytics": true,
                                "title": "query details",
                                "timeContext": {
                                "durationMs": 86400000
                                },
                                "timeContextFromParameter": "TimeRange",
                                "showExportToExcel": true,
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces",
                                "tileSettings": {
                                "showBorder": false
                                }
                            },
                            "name": "query - 1"
                            }
                        ]
                        },
                        "name": "group - 5"
                    }
                    ]
                },
                "conditionalVisibility": {
                    "parameterName": "tab",
                    "comparison": "isEqualTo",
                    "value": "securityreport"
                },
                "name": "group - securityreport"
                },
                {
                "type": 12,
                "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                    {
                        "type": 9,
                        "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                            {
                            "id": "f0296c21-03ba-4571-b617-ea45e9bd03d6",
                            "version": "KqlParameterItem/1.0",
                            "name": "ipaddress",
                            "type": 1,
                            "timeContext": {
                                "durationMs": 86400000
                            },
                            "value": "167.220.255.72",
                            "label": "Ip Address"
                            }
                        ],
                        "style": "pills",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 3"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let ipaddress = '{ipaddress}';\r\nAzureNetworkAnalytics_CL\r\n| where PublicIPs_s <> ''\r\n| extend PublicIPAddress = tostring(split(PublicIPs_s,\"|\")[0])\r\n| where PublicIPAddress =~ ipaddress\r\n| summarize Calls = count() by SrcIP_s, DestIP_s , PublicIPAddress, FlowStatus_s, DestPort_d, L7Protocol_s, FlowDirection_s\r\n| project Calls, SourceIP = iff(SrcIP_s<>'',SrcIP_s,PublicIPAddress), DestinationIP = iff(DestIP_s<>'',DestIP_s,PublicIPAddress), Protocol = strcat(L7Protocol_s,'(',toint(DestPort_d),')') ,Directory = iff(FlowDirection_s=='I','In','Out'), Statis = iff(FlowStatus_s=='A','Allowed','Denied')\r\n| top 100 by Calls desc\r\n\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Traffic Analytics for public IP Address",
                        "timeContext": {
                            "durationMs": 259200000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "table"
                        },
                        "name": "query - publicIPquery"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let ipaddress = '{ipaddress}';\r\nlet maxnode = 10;\r\nlet outtointernet = AzureNetworkAnalytics_CL\r\n| where PublicIPs_s <> '' and FlowDirection_s == 'O' and FlowStatus_s=='A'\r\n| extend PublicIPAddress = tostring(split(PublicIPs_s,\"|\")[0])\r\n| where PublicIPAddress =~ ipaddress and PublicIPAddress <> SrcIP_s\r\n| summarize Calls = count() by SrcIP_s, PublicIPAddress, FlowStatus_s, DestPort_d, L7Protocol_s\r\n| project sourceIp = SrcIP_s, targetIP = PublicIPAddress, Calls, Type = strcat(L7Protocol_s,'(',toint(DestPort_d),')')\r\n| top maxnode by Calls desc;\r\nlet frominternet = AzureNetworkAnalytics_CL\r\n| where PublicIPs_s <> '' and FlowDirection_s == 'I' and FlowStatus_s=='A'\r\n| extend PublicIPAddress = tostring(split(PublicIPs_s,\"|\")[0])\r\n| where PublicIPAddress =~ ipaddress and DestIP_s <> PublicIPAddress\r\n| summarize Calls = count() by DestIP_s, PublicIPAddress, FlowStatus_s, DestPort_d, L7Protocol_s\r\n| project sourceIp = PublicIPAddress, targetIP = DestIP_s, Calls, Type = strcat(L7Protocol_s,'(',toint(DestPort_d),')')\r\n| top maxnode by Calls desc;\r\nlet links = union outtointernet, frominternet;\r\nlet Nodes = outtointernet \r\n| project Id = sourceIp, Name = sourceIp, Kind = 'VNet' \r\n| union (\r\nouttointernet \r\n| project Id = targetIP, Name = targetIP, Kind = 'Internet' \r\n) \r\n| union ( \r\nfrominternet\r\n| project Id = sourceIp, Name = sourceIp, Kind = 'Internet' \r\n) \r\n| union ( \r\nfrominternet\r\n| project Id = targetIP, Name = targetIP, Kind = 'VNet' \r\n);\r\nNodes\r\n| union (links)",
                        "size": 3,
                        "title": "Allowed Traffic Graph for public IP",
                        "timeContext": {
                            "durationMs": 259200000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "graph",
                        "graphSettings": {
                            "type": 0,
                            "topContent": {
                            "columnMatch": "Kind",
                            "formatter": 1
                            },
                            "centerContent": {
                            "columnMatch": "Id",
                            "formatter": 1
                            },
                            "nodeIdField": "Name",
                            "sourceIdField": "sourceIp",
                            "targetIdField": "targetIP",
                            "graphOrientation": 1,
                            "showOrientationToggles": true,
                            "edgeLabel": "Type",
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                            "nodeColorField": "Kind",
                            "type": 1,
                            "colorPalette": "default",
                            "emptyValueColor": "gray"
                            },
                            "groupByField": "sourceIp",
                            "hivesMargin": 5
                        }
                        },
                        "name": "query - 5"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let checktable = datatable([\"external TI link\"]:string)\r\n[\"https://www.virustotal.com/gui/ip-address/{ipaddress}/detection\"];\r\nchecktable\r\n\r\n",
                        "size": 4,
                        "title": "Check foe IP address details",
                        "timeContext": {
                            "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "gridSettings": {
                            "formatters": [
                            {
                                "columnMatch": "external TI link",
                                "formatter": 7,
                                "formatOptions": {
                                "linkTarget": "Url"
                                }
                            }
                            ]
                        }
                        },
                        "name": "query - 2"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let AccountActivity_byIP = (v_IP_Address:string){\r\n    AzureActivity\r\n    | where Caller != '' and CallerIpAddress =~ v_IP_Address\r\n    | summarize Account_Aux_StartTime = min(TimeGenerated), \r\n      Account_Aux_EndTime = max(TimeGenerated), \r\n      Count = count() by \r\n      Caller, TenantId\r\n    | top 10 by Count asc nulls last \r\n    | extend UPN = iff(Caller contains '@', Caller, ''), Account_AadUserId = iff(Caller !contains '@', Caller,'')\r\n    | extend Account_Name = split(UPN,'@')[0] , Account_UPNSuffix = split(UPN,'@')[1]\r\n    | project Account_Name, Account_UPNSuffix, Account_AadUserId, Account_AadTenantId=TenantId, Account_Aux_StartTime , Account_Aux_EndTime \r\n    };\r\n    AccountActivity_byIP('{ipaddress}')",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Azure Operations from this IP",
                        "timeContext": {
                            "durationMs": 259200000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "showExportToExcel": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "gridSettings": {
                            "formatters": [
                            {
                                "columnMatch": "TI link",
                                "formatter": 7,
                                "formatOptions": {
                                "linkTarget": "Url"
                                }
                            }
                            ]
                        }
                        },
                        "name": "query - 1"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let GetMostPrevUsersbyIP = (v_IP_Address:string){\r\nSigninLogs\r\n| where IPAddress =~ v_IP_Address\r\n| extend RemoteHost = tolower(tostring(parsejson(DeviceDetail['displayName'])))\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\r\n| extend info = pack('AppDisplayName', AppDisplayName, 'ClientAppUsed', ClientAppUsed, 'Browser', tostring(Browser), 'IPAddress', IPAddress, 'ResultType', ResultType, 'ResultDescription', ResultDescription, 'Location', Location, 'State', State, 'City', City, 'StatusCode', StatusCode, 'StatusDetails', StatusDetails)\r\n| summarize min(TimeGenerated), max(TimeGenerated), count(), Account_Aux_info = makeset(info) by RemoteHost , UserDisplayName, tostring(OS), UserPrincipalName, AADTenantId, UserId\r\n| top 10 by count_ desc nulls last \r\n| project Account_Aux_StartTimeUtc = min_TimeGenerated, Account_Aux_EndTimeUtc = max_TimeGenerated, RemoteHost, UserDisplayName, OS, UserPrincipalName, AADTenantId, UserId, Account_Aux_info\r\n| project-rename Account_UnstructuredName=UserPrincipalName, Account_DisplayName=UserDisplayName, Account_AadTenantId=AADTenantId, Account_AadUserId=UserId, Account_Host_UnstructuredName=RemoteHost, Account_Host_OSVersion=OS\r\n};\r\n// change <Address> value below\r\nGetMostPrevUsersbyIP('{ipaddress}')",
                        "size": 0,
                        "title": "AAD signing from this IP",
                        "timeContext": {
                            "durationMs": 259200000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 4"
                    }
                    ]
                },
                "conditionalVisibility": {
                    "parameterName": "tab",
                    "comparison": "isEqualTo",
                    "value": "publicIPAddress"
                },
                "name": "group - publicIPAddress"
                },
                {
                "type": 12,
                "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                    {
                        "type": 9,
                        "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                            {
                            "id": "e0fe6aa8-6fcc-48f1-b638-c092d7d4ee7c",
                            "version": "KqlParameterItem/1.0",
                            "name": "HostName",
                            "type": 1,
                            "value": "k8skindvm",
                            "timeContext": {
                                "durationMs": 86400000
                            },
                            "label": "VM Name"
                            },
                            {
                            "id": "97e30820-92e2-4a16-be57-697bbc017b62",
                            "version": "KqlParameterItem/1.0",
                            "name": "HostIP",
                            "type": 1,
                            "value": "12.10.0.41",
                            "timeContext": {
                                "durationMs": 86400000
                            },
                            "label": "VM IPAddress"
                            },
                            {
                            "id": "f2ec67b8-9500-435d-a1b2-97cdf6afa082",
                            "version": "KqlParameterItem/1.0",
                            "name": "Message",
                            "label": "Message contains",
                            "type": 1
                            }
                        ],
                        "style": "pills",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 0"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let ipaddress = '{HostIP}';\r\nAzureNetworkAnalytics_CL\r\n| where PublicIPs_s <> ''\r\n| extend PublicIPAddress = tostring(split(PublicIPs_s,\"|\")[0])\r\n| where   SrcIP_s =~ ipaddress or DestIP_s =~ ipaddress\r\n| summarize Calls = count() by SrcIP_s, DestIP_s , PublicIPAddress, FlowStatus_s, DestPort_d, L7Protocol_s, FlowDirection_s\r\n| project Calls, SourceIP = iff(SrcIP_s<>'',SrcIP_s,PublicIPAddress), DestinationIP = iff(DestIP_s<>'',DestIP_s,PublicIPAddress), Protocol = strcat(L7Protocol_s,'(',toint(DestPort_d),')') ,Directory = iff(FlowDirection_s=='I','In','Out'), Statis = iff(FlowStatus_s=='A','Allowed','Denied')\r\n| top 100 by Calls desc",
                        "size": 0,
                        "timeContext": {
                            "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 3"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let ipaddress = '{HostIP}';\r\nlet threshold = 10;\r\nlet maxnode = 10;\r\nlet outtointernet = AzureNetworkAnalytics_CL\r\n| where FlowDirection_s == 'O' //and PublicIPs_s <> ''\r\n| extend PublicIPAddress = tostring(split(PublicIPs_s,\"|\")[0])\r\n| where  SrcIP_s =~ ipaddress and PublicIPAddress <> SrcIP_s and FlowStatus_s =~ 'A'\r\n| summarize Calls = count() by SrcIP_s, PublicIPAddress, FlowStatus_s, DestIP_s, DestPort_d, L7Protocol_s\r\n| project sourceIp = SrcIP_s, targetIP = PublicIPAddress, Calls, Type = strcat(L7Protocol_s, '(' ,toint(DestPort_d),')')\r\n| where Calls > threshold\r\n| top  maxnode by Calls desc;\r\nlet frominternet = AzureNetworkAnalytics_CL\r\n| where FlowDirection_s == 'I' //and PublicIPs_s <> ''\r\n| extend PublicIPAddress = tostring(split(PublicIPs_s,\"|\")[0])\r\n| where DestIP_s =~ ipaddress and DestIP_s <> PublicIPAddress and FlowStatus_s =~ 'A'\r\n| summarize Calls = count() by DestIP_s, PublicIPAddress, FlowStatus_s, SrcIP_s, DestPort_d, L7Protocol_s\r\n| project sourceIp = PublicIPAddress, targetIP = DestIP_s, Calls, Type = strcat(L7Protocol_s, '(' ,toint(DestPort_d),')')\r\n| where Calls > threshold\r\n| order by Calls desc\r\n| top  maxnode by Calls desc;\r\nlet links = union outtointernet, frominternet;\r\nlet Nodes = outtointernet \r\n| project Id = sourceIp, Name = sourceIp, Kind = 'VNet' \r\n| union (\r\nouttointernet \r\n| project Id = targetIP, Name = targetIP, Kind = 'Internet'\r\n) \r\n| union ( \r\nfrominternet\r\n| project Id = sourceIp, Name = sourceIp, Kind = 'Internet'\r\n) \r\n| union ( \r\nfrominternet\r\n| project Id = targetIP, Name = targetIP, Kind = 'VNet' \r\n)\r\n| distinct Id, Name, Kind;\r\nNodes\r\n| union (links)\r\n",
                        "size": 3,
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "visualization": "graph",
                        "graphSettings": {
                            "type": 0,
                            "topContent": {
                            "columnMatch": "Kind",
                            "formatter": 1
                            },
                            "centerContent": {
                            "columnMatch": "Id",
                            "formatter": 1,
                            "numberFormat": {
                                "unit": 17,
                                "options": {
                                "style": "decimal",
                                "maximumFractionDigits": 2,
                                "maximumSignificantDigits": 3
                                }
                            }
                            },
                            "nodeIdField": "Id",
                            "sourceIdField": "sourceIp",
                            "targetIdField": "targetIP",
                            "graphOrientation": 3,
                            "showOrientationToggles": true,
                            "edgeSize": "Calls",
                            "edgeLabel": "Type",
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": {
                            "nodeColorField": "Kind",
                            "type": 1,
                            "colorPalette": "default"
                            },
                            "hivesMargin": 5
                        }
                        },
                        "name": "query - 2"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let GetSysLogEventsWithHostName = (v_Host_Name:string, v_Host_Ip:string, v_message_filter:string){\r\nunion Syslog\r\n| where HostName =~ v_Host_Name or HostIP =~ v_Host_Ip\r\n| where SyslogMessage has  v_message_filter\r\n| summarize min(EventTime), max(EventTime), processcount = count() by Computer, HostIP, ProcessName\r\n| top 10 by processcount desc nulls last \r\n| project Host_Aux_StartTime = min_EventTime, Host_Aux_EndTime = max_EventTime, Computer,  HostIP, ProcessName, processcount\r\n| project-rename Host_UnstructuredName=Computer, HostIPAddess=HostIP\r\n};\r\n// change <Address> value below\r\nGetSysLogEventsWithHostName('{HostName}','{HostIP}','{Message}')\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Top process in Syslog",
                        "timeContext": {
                            "durationMs": 259200000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportedParameters": [
                            {
                            "fieldName": "ProcessName",
                            "parameterName": "ProcessName",
                            "parameterType": 1
                            },
                            {
                            "fieldName": "Host_UnstructuredName",
                            "parameterName": "Host_UnstructuredName",
                            "parameterType": 1
                            },
                            {
                            "fieldName": "HostIPAddess",
                            "parameterName": "HostIPAddess",
                            "parameterType": 1
                            }
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 1"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let v_process_name = '{ProcessName}';\r\nlet v_Host_Name = '{HostName}';\r\nlet v_Host_Ip = '{HostIP}';\r\nlet v_message_filter = '{Message}';\r\nlet messagecount = 200;\r\nunion Syslog\r\n| where Computer =~ v_Host_Name or HostIP =~ v_Host_Ip \r\n| where ProcessName =~ v_process_name\r\n| where SyslogMessage has  v_message_filter\r\n| project EventTime, Computer,  HostIP, ProcessName, SyslogMessage\r\n| top messagecount by EventTime",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Syslog Message Details",
                        "timeContext": {
                            "durationMs": 259200000
                        },
                        "timeContextFromParameter": "TimeRange",
                        "showRefreshButton": true,
                        "showExportToExcel": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 4"
                    }
                    ]
                },
                "conditionalVisibility": {
                    "parameterName": "tab",
                    "comparison": "isEqualTo",
                    "value": "hostorIP"
                },
                "name": "group - clientIP"
                },
                {
                "type": 12,
                "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                    {
                        "type": 9,
                        "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                            {
                            "id": "008c597a-cf10-437a-90c9-f3b8449c9d00",
                            "version": "KqlParameterItem/1.0",
                            "name": "accountname",
                            "type": 1,
                            "value": "",
                            "timeContext": {
                                "durationMs": 86400000
                            },
                            "label": "AAD Account"
                            }
                        ],
                        "style": "pills",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 7"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let IPsFromRareLocations = (s_Account_Name:string){\r\nlet LocationPrevalence =\r\nSigninLogs\r\n| where UserPrincipalName has s_Account_Name\r\n| extend v_Account_Name = UserPrincipalName\r\n| extend Account_Name = case(\r\n// Handles mixed use scenario of NTDomain\\AccountName@UPNSuffix\r\nv_Account_Name has '@' and v_Account_Name has '\\\\', tostring(split(tostring(split(v_Account_Name, '\\\\')[1]),'@')[0]),\r\nv_Account_Name has '@', tostring(split(v_Account_Name, '@')[0]),\r\nv_Account_Name has '\\\\', tostring(split(v_Account_Name, '\\\\')[1]),\r\nv_Account_Name\r\n)\r\n| project-rename Account_AadUserId = UserId\r\n| extend FullLocation = strcat(Location,'|', LocationDetails.state, '|', LocationDetails.city)\r\n| summarize ConnectionCount = count() by FullLocation, UserPrincipalName, IPAddress, Account_Name, Account_AadUserId;\r\nLocationPrevalence\r\n| summarize make_list(IPAddress), make_list(FullLocation), make_list(ConnectionCount), dcount(FullLocation), totalActivity = sum(ConnectionCount) by UserPrincipalName, Account_AadUserId\r\n| mv-expand Location = list_FullLocation, ConnectionCount = list_ConnectionCount, IPAddress = list_IPAddress\r\n| extend Location = tostring(Location), ConnectionCount = toint(ConnectionCount), IPAddress = tostring(IPAddress)\r\n| extend percentOfActivity = 100*round(todouble(ConnectionCount)/totalActivity,4)\r\n| where percentOfActivity < 10\r\n| project UserPrincipalName, Account_AadUserId, IPAddress, Location, ConnectionCount, percentOfActivity\r\n| sort by percentOfActivity asc, ConnectionCount desc\r\n| top 10 by percentOfActivity asc\r\n| extend IP_Location_Country = tostring(split(Location,'|')[0]), IP_Location_Region = tostring(split(Location,'|')[1]), IP_Location_City = tostring(split(Location,'|')[2])\r\n| extend Account_Aux_info = pack('PercentOfActivity', percentOfActivity, 'ConnectionCount', ConnectionCount)\r\n| parse UserPrincipalName with Account_NTDomain '\\\\' *\r\n| project Account_UnstructuredName = UserPrincipalName, Account_NTDomain,  Account_AadUserId, IP_Address = IPAddress, IP_Location_Country, IP_Location_Region, IP_Location_City, Account_Aux_info\r\n};\r\n// Where <Name> is the UserName such as John from John@contoso.com, <UPNSuffix> is the domain such as contoso.com from John@contoso.com and <AadUserId> is the GUID assigned in AAD to the user\r\nIPsFromRareLocations('{accountname}')",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "AAD user login (UPN name required)",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 10"
                    },
                    {
                        "type": 3,
                        "content": {
                        "version": "KqlItem/1.0",
                        "query": "let GetAllHostsbyAccount = (v_Account_Name:string){\r\nSigninLogs\r\n| extend v_Account_Name = case(\r\nv_Account_Name has '@', tostring(split(v_Account_Name, '@')[0]),\r\nv_Account_Name has '\\\\', tostring(split(v_Account_Name, '\\\\')[1]),\r\nv_Account_Name\r\n)\r\n| extend targetaccount = iff(v_Account_Name<>'',v_Account_Name,'administrator')\r\n| where UserPrincipalName contains targetaccount\r\n| extend RemoteHost = tolower(tostring(parsejson(DeviceDetail['displayName'])))\r\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\r\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\r\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\r\n| extend info = pack('UserDisplayName', UserDisplayName, 'UserPrincipalName', UserPrincipalName, 'AppDisplayName', AppDisplayName, 'ClientAppUsed', ClientAppUsed, 'Browser', tostring(Browser), 'IPAddress', IPAddress, 'ResultType', ResultType, 'ResultDescription', ResultDescription, 'Location', Location, 'State', State, 'City', City, 'StatusCode', StatusCode, 'StatusDetails', StatusDetails)\r\n| summarize min(TimeGenerated), max(TimeGenerated), Host_Aux_info = makeset(info) by RemoteHost , tostring(OS)\r\n| project min_TimeGenerated, max_TimeGenerated, RemoteHost, OS, Host_Aux_info\r\n| top 10 by min_TimeGenerated desc nulls last \r\n| project-rename Host_UnstructuredName=RemoteHost, Host_OSVersion=OS, Host_Aux_StartTime=min_TimeGenerated, Host_Aux_EndTime=max_TimeGenerated\r\n};\r\n// change <Name> value below\r\nGetAllHostsbyAccount('{accountname}')",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "AAD Login Host per AAD user",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 8"
                    }
                    ]
                },
                "conditionalVisibility": {
                    "parameterName": "tab",
                    "comparison": "isEqualTo",
                    "value": "accountname"
                },
                "name": "group - aaduser"
                }
            ],
            "isLocked": false,
            "fallbackResourceIds": [
                "[variables('workspacenresourceId')]"
            ]
        }
                
    }, 
    "resources":  [
                      {
                          "name":  "[concat(parameters('AutomationAccountName'),'/',variables('runbookName'))]",
                          "type":  "Microsoft.Automation/automationAccounts/runbooks",
                          "apiVersion":  "2015-10-31",
                          "location":  "[parameters('location')]",
                          "tags":  {

                                   },
                          "properties":  {
                                             "runbookType":  "PowerShell",
                                             "logProgress":  "false",
                                             "logVerbose":  "false",
                                             "publishContentLink":  {
                                                                        "uri":  "https://bitbucket.org/xinhh/azurescripts/raw/46d338dd930296cddddbeb18f0f199a3c3088e7d/runbookcontentv2.ps1",
                                                                        "version":  "1.0.0.0"
                                                                    }
                                         }
                      },
                      {
                        "name": "[concat(parameters('AutomationAccountName'),'/',variables('detectionqueryschedulename'))]",
                        "type": "Microsoft.Automation/automationAccounts/schedules",
                        "apiVersion": "2015-10-31",
                        "properties": {
                            "description": "security rule polling schedule",
                            "startTime": "[parameters('detectionstarttime')]",
                            "isEnabled":"true",   
                            "timeZone":"China Standard Time",                         
                            "expiryTime": "",
                            "interval": "[parameters('detectionqueryinterval')]",
                            "frequency": "[parameters('detectionqueryfrequency')]"                           
                        }
                      }, 
                      {
                        "name": "[concat(parameters('AutomationAccountName'), '/', parameters('detectionjobschedule'))]",
                        "type": "microsoft.automation/automationAccounts/jobSchedules",
                        "apiVersion": "2015-10-31",
                        "location": "[parameters('location')]",
                        "dependsOn": [
                            "[concat('Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'), '/schedules/', variables('detectionqueryschedulename'))]",
                            "[concat('Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'), '/runbooks/', variables('runbookName'))]"
                        ],
                        "tags": {},
                        "properties": {
                            "schedule": {
                            "name": "[variables('detectionqueryschedulename')]"
                            },
                            "runbook": {
                            "name": "[variables('runbookName')]"
                            },
                            "parameters": {
                                "WORKSPACENAME":"[parameters('workspacename')]",
                                "RESOURCEGROUPNAME":"[parameters('workspaceresourcegroup')]"
                            }                             
                        }                       
                      },                      
                      {
                          "name":  "[parameters('sentinelqueryreport_id')]",
                          "properties":  {
                                             "displayName":  "[variables('workbookname')]", 
                                             "serializedData": "[string(variables('workbookContent'))]",
                                             "category":  "workbook",
                                             "version":  "1.0",
                                             "sourceId":  "[variables('workspacenresourceId')]"
                                         },
                          "type":  "microsoft.insights/workbooks",
                          "kind":  "shared",
                          "apiVersion":  "2018-06-17-preview",
                          "location":  "[parameters('location')]"
                      }
                  ]
}
